<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="com.tripplan.duck.report.model.mapper.ReportMapper">

	<resultMap type="Report" id="ReportResultMap">
		<id property="reportId" column="REPORT_ID" />
		<result property="reportCategory" column="REPORT_CATEGORY" />
		<result property="reportMemberNo" column="REPORT_M_NO" />
		<result property="reportCreateDate" column="REPORT_CREATEDATE" />
		<result property="reportCount" column="REPORT_COUNT" />
		<result property="reportType" column="REPORT_TYPE" />
		<result property="reportNoType" column="REPORT_NO_TYPE" />
		<result property="memberNo" column="M_NO" />
	</resultMap>
	
	<resultMap type="Comments" id="commentsResultMap">
		<id property="commentsId" column="COMMENTS_ID" />
		<result property="memberNo" column="M_NO" />
		<result property="commentsWriterId" column="COMMENTS_WRITER_ID" />
		<result property="commentsContent" column="COMMENTS_CONTENT" />
		<result property="commentsRating" column="COMMENTS_RATING" />
		<result property="commentsCreateDate" column="COMMENTS_CREATEDATE" />
		<result property="commentsUpdateDate" column="COMMENTS_UPDATEDATE" />
		<result property="commentsCreateDateSt" column="COMMENTS_CREATEDATE_ST" />
		<result property="commentsUpdateDateSt" column="COMMENTS_UPDATEDATE_ST" />
		<result property="destNo" column="DEST_NO" />
		<result property="destSubject" column="DEST_SUBJECT" />
		<result property="destCategory" column="DEST_CATEGORY" />
	</resultMap>
	
	<resultMap type="WithDuck" id="withDuckResultMap">
		<id property="withNo" column="WITH_NO"/>
		<result property="withWriterNo" column="WITH_WRITER_NO"/>
		<result property="withWriterNick" column="WITH_WRITER_NICK"/>
		<result property="withLocation" column="WITH_LOCATION"/>
		<result property="withGender" column="WITH_GENDER"/>
		<result property="withAge" column="WITH_AGE"/>
		<result property="withPersonner" column="WITH_PERSONNER"/>
		<result property="withStatus" column="WITH_STATUS"/>
		<result property="withStartDate" column="WITH_STARTDATE"/>
		<result property="withEndDate" column="WITH_ENDDATE"/>
		<result property="withOriginFileName" column="WITH_ORIGINFILENAME"/>
		<result property="withRenameFileName" column="WITH_RENAMEFILENAME"/>
		<result property="withTitle" column="WITH_TITLE"/>
		<result property="withContent" column="WITH_CONTENT"/>
		<result property="withWriterGender" column="WITH_WRITER_GENDER"/>
		<result property="withWriterAge" column="WITH_WRITER_AGE"/>
		<result property="withkeyword" column="WITH_KEYWORD"/>
		<result property="withReadCount" column="WITH_READCOUNT"/>
		<result property="withJoinStatus" column="WITH_JOINSTATUS"/>
		<result property="createDate" column="WITH_CREATEDATE"/>
		<result property="updateDate" column="WITH_UPDATEDATE"/>
	</resultMap>
	
	<select id="selectCommentReport" parameterType="String" resultType="_int">
		SELECT COUNT(*)
  		FROM REPORT R
  		JOIN DESTINATION_COMMENTS C ON R.REPORT_NO_TYPE = C.COMMENTS_ID
  		WHERE (REPORT_CATEGORY = 'REVIEW') AND (REPORT_NO_TYPE = #{reportNoType})
	</select >
	
	<insert id="insertCommentReport" parameterType="com.tripplan.duck.report.model.vo.Report"> 
		INSERT INTO REPORT (
			REPORT_ID,
			REPORT_CATEGORY,
			REPORT_M_NO,
			REPORT_CREATEDATE,
			REPORT_COUNT,
			REPORT_TYPE,
			REPORT_NO_TYPE,
			M_NO
		) VALUES(
			SEQ_REPORT_ID.NEXTVAL,
			'REVIEW',
			#{reportMemberNo},
			TO_CHAR(SYSDATE + (interval '9' hour), 'YYYY.MM.DD HH24:MI'),
			'1',
			#{reportType},
			#{reportNoType},
			#{memberNo}
		)	
	</insert>
	
	<select id="getComments" parameterType="String" resultMap="commentsResultMap">
		SELECT * FROM DESTINATION_COMMENTS
		WHERE COMMENTS_ID = #{reportNoType}
	</select>
	
	<select id="getReportComments" parameterType="String" resultMap="ReportResultMap">
        SELECT * FROM REPORT
        WHERE (REPORT_NO_TYPE = #{reportNoType}) AND (REPORT_CATEGORY = 'REVIEW')
    </select>
	
	<update id="updateReportCount" parameterType="com.tripplan.duck.report.model.vo.Report">
        UPDATE REPORT SET
        REPORT_CREATEDATE = TO_CHAR(SYSDATE + (interval '9' hour), 'YYYY.MM.DD HH24:MI'),
        REPORT_COUNT = NVL(REPORT_COUNT, 0) + 1,
		REPORT_TYPE = #{reportType}        
        WHERE REPORT_ID = #{reportId}
    </update>
    
    <!-- 위드덕 -->
    
    <select id="selectWithDuckReport" parameterType="map" resultType="_int">
		SELECT COUNT(*)
  		FROM REPORT R
        JOIN WITHDUK W ON R.REPORT_NO_TYPE = W.WITH_NO
        WHERE (REPORT_CATEGORY = 'WITHDUCK') AND (REPORT_NO_TYPE = #{reportNoType})
	</select >
	
	<insert id="insertWithDuckReport" parameterType="com.tripplan.duck.report.model.vo.Report"> 
		INSERT INTO REPORT (
			REPORT_ID,
			REPORT_CATEGORY,
			REPORT_M_NO,
			REPORT_CREATEDATE,
			REPORT_COUNT,
			REPORT_TYPE,
			REPORT_NO_TYPE,
			M_NO
		) VALUES(
			SEQ_REPORT_ID.NEXTVAL,
			'WITHDUCK',
			#{reportMemberNo},
			TO_CHAR(SYSDATE + (interval '9' hour), 'YYYY.MM.DD HH24:MI'),
			1,
			#{reportType},
			#{reportNoType},
			#{memberNo}
		)
	</insert>
	
	<select id="getWithDuck" parameterType="int" resultMap="withDuckResultMap">
		SELECT * FROM WITHDUK
		WHERE WITH_NO = #{reportNoType}
	</select>
	
	<select id="getReportWithDuck" parameterType="String" resultMap="ReportResultMap">
        SELECT * FROM REPORT
        WHERE (REPORT_NO_TYPE = #{reportNoType}) AND (REPORT_CATEGORY = 'WITHDUCK')
    </select>
</mapper>