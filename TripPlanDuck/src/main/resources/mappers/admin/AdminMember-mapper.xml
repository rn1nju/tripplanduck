<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="com.tripplan.duck.admin.model.mapper.AdminMapper">
	<sql id="selectMemberSql">
		SELECT M_NO,
		       M_ID,
		       M_PW,
		       M_NICKNAME,
		       M_EMAIL,
		       M_TYPE,
		       M_WARNING,
		       M_STATUS,
		       M_GENDER
		       
		FROM MEMBER
	</sql>

	<resultMap type="Member" id="memberResultMap">
		<id property="memberNo" column="M_NO" />
		<result property="memberId" column="M_ID"/>
		<result property="memberPassword" column="M_PW"/>
		<result property="memberNickname" column="M_NICKNAME"/>
		<result property="memberEmail" column="M_EMAIL"/>
		<result property="memberType" column="M_TYPE"/>
		<result property="memberWarning" column="M_WARNING"/>
		<result property="memberStatus" column="M_STATUS"/>
		<result property="memberGender" column="M_GENDER"/>
		<result property="memberAge" column="M_AGE"/>
	</resultMap>
	
	<resultMap type="Report" id="memberReportResultMap">
		<id property="reportId" column="REPORT_ID" />
		<result property="reportCategory" column="REPORT_CATEGORY" />
		<result property="reportMemberNo" column="REPORT_M_NO" />
		<result property="reportCreateDate" column="REPORT_CREATEDATE" />
		<result property="reportCount" column="REPORT_COUNT" />
		<result property="reportType" column="REPORT_TYPE" />
		<result property="reportNoType" column="REPORT_NO_TYPE" />
		<result property="memberNo" column="M_NO" />
	</resultMap>
	
	<select id="memberFindNo" parameterType="int" resultMap="memberResultMap">
		SELECT * FROM MEMBER 
		WHERE M_NO = #{memberNo}
	</select>

	<select id="selectCount" resultType="_int">
		SELECT COUNT(*) FROM MEMBER
	</select>

	<select id="selectAll" resultMap="memberResultMap">		
		<include refid="selectMemberSql"/>
		ORDER BY M_NO DESC
	</select>
	
	<select id="selectMemberOld" resultMap="memberResultMap">
		SELECT * FROM MEMBER
		WHERE M_STATUS = 'N'
	</select>
	
	<select id="selectMemberLatest" resultMap="memberResultMap">
		SELECT * FROM MEMBER
		WHERE M_STATUS = 'Y'
	</select>

	<select id="selectMemberById" parameterType="string" resultMap="memberResultMap">
		<include refid="selectMemberSql"/>
		WHERE M_ID = #{memberId} AND M_STATUS = 'Y'
	</select>
	
	<select id="selectMemberByNickname" parameterType="string" resultMap="memberResultMap">
		<include refid="selectMemberSql"/>
		WHERE M_NICKNAME = #{memberNickname} AND M_STATUS = 'Y'
	</select>
	
	<select id="memberReport" resultMap="memberReportResultMap">
		SELECT * FROM REPORT
	</select>
	
	<select id="memberReportCount1" resultMap="memberReportResultMap">
		SELECT M_NO FROM REPORT
		<![CDATA[ WHERE REPORT_COUNT = 3 ]]>
	</select>
	
	<update id="memberReportCount2" parameterType="_int">
		UPDATE MEMBER
		SET M_STATUS = 'N'
		WHERE MEMBER.M_NO IN (SELECT REPORT_M_NO 
            FROM REPORT
            GROUP BY REPORT_M_NO
           	<![CDATA[
            HAVING SUM(REPORT_COUNT) >= 3
            ]]>
		)
	</update>
	
	<delete id="memberReportCount3">
		DELETE 
		FROM WITHDUK W
		WHERE W.WITH_WRITER_NO IN (
		        SELECT M.M_NO
		        FROM MEMBER M
		        WHERE M.M_STATUS = 'N'
		)
	</delete>
	
	<delete id="memberReportCount4">
		DELETE 
		FROM DESTINATION_COMMENTS D
		WHERE D.M_NO IN (
		        SELECT M.M_NO
		        FROM MEMBER M
		        WHERE M.M_STATUS = 'N'
		)
	</delete>
	
	<delete id="memberReportCount5">
		DELETE 
		FROM REPORT R
		WHERE R.M_NO IN (
		        SELECT M.M_NO
		        FROM MEMBER M
		        WHERE M.M_STATUS = 'N'
		)
	</delete>

	<insert id="insertMember" parameterType="Member"
			useGeneratedKeys="true" keyColumn="M_NO" keyProperty="memberNo"> 
		INSERT INTO MEMBER (
			M_NO,
			M_ID,
			M_PW,
			M_NICKNAME,
			M_EMAIL,
			M_TYPE,
			M_WARNING,
			M_STATUS,
			M_GENDER,
			M_AGE
		) VALUES(
			SEQ_MEMBER_NO.NEXTVAL,
			#{memberId},
			#{memberPassword},
			#{memberNickname},
			#{memberEmail},
			DEFAULT,
			DEFAULT,
			DEFAULT,
			#{memberGender},
			#{memberAge}
		)	
	</insert>
	
	<update id="updateMember" parameterType="Member">
		UPDATE MEMBER 
		SET 
			NAME = #{name},
			PHONE = #{phone},
			EMAIL = #{email},
			ADDRESS = #{address},
			HOBBY = #{hobby},
			MODIFY_DATE = SYSDATE 
		WHERE NO = #{no}
	</update>
	
	
	<update id="updateReportStatus" parameterType="Member">
		UPDATE MEMBER
			<set>
				<if test="reportCount =='4'">
					memberStatus = 'N'
				</if>
			</set>
	</update>
	
	<delete id="deleteMember" parameterType="_int">
		DELETE FROM MEMBER WHERE NO = #{memberNO}
	</delete>
</mapper>